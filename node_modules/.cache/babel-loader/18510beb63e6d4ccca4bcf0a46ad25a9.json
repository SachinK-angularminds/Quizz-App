{"ast":null,"code":"var _jsxFileName = \"/home/am-pc-33/Documents/ReactJS/technicaltest/src/component/Test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from '../../node_modules/axios';\nimport { useNavigate } from 'react-router-dom';\nimport Finish from './Finish';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Test() {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  let {\n    qnumber\n  } = useParams();\n  let navigate = useNavigate();\n  let name1;\n  let option1 = [];\n  let type1 = [];\n  let myLeads = [];\n  const [repo, setRepo] = useState([]);\n  let intnumber = parseInt(qnumber);\n  let inc = 1 + intnumber;\n  let strinc = inc.toString();\n  let textValue1 = /*#__PURE__*/React.createRef();\n  let text1 = [];\n\n  const getRepo = () => {\n    axios.get('http://interviewapi.stgbuild.com/getQuizData').then(response => {\n      const myRepo = response.data.tests;\n      setRepo(myRepo);\n    });\n  };\n\n  let len;\n  useEffect(() => {\n    let notes = localStorage.getItem('repo');\n    let myLeads = JSON.parse(notes);\n    getRepo();\n  }, []);\n\n  for (let i = 0; i < repo.length; i++) {\n    if (repo[i]._id == id) {\n      name1 = repo[i].name;\n      text1 = repo[i].questions[qnumber];\n      option1 = repo[i].questions[qnumber].options;\n      type1 = repo[i].questions[qnumber].type;\n      len = repo[i].questions.length; //localStorage.setItem('abc',JSON.stringify(option1))\n    }\n  } // function setItems(){\n  // for(let i=0;i<repo.length;i++){\n  //   if(repo[i]._id == id){\n  //     a1=repo[i].questions[qnumber].correctOptionIndex\n  //     // if(a1 == ){\n  //     // }\n  //   }}\n  // }\n  // for(let i=0;i<repo.length;i++){\n  //   a1=repo[i].questions[qnumber].correctOptionIndex\n  // if(a1 == )    \n  // }\n  //localStorage.setItem('abc',JSON.stringify(ticked_answer))\n\n\n  function next() {}\n\n  let abc;\n  let correctanswer;\n\n  let clickable = e => {\n    let notes = localStorage.getItem('repo');\n    let myLeads = JSON.parse(notes); //console.log(myLeads)\n\n    abc = e.target.value;\n    console.log(abc);\n    let correctanswer = repo[0].questions[0].correctOptionIndex;\n\n    for (let i = 0; i < myLeads.length; i++) {\n      if (repo[i].questions[qnumber].correctOptionIndex == abc) {}\n    } // for(let i=0;i<;i++){\n    // }\n\n\n    console.log(correctanswer);\n  };\n\n  function finish() {\n    navigate('/finish');\n  } // const [counter, setCounter] = useState(0)\n  // function increment(){\n  //   setCounter(counter+1)\n  // }\n  // console.log(counter)\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Interview Portal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"panel panel-default\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"panel-heading\",\n            children: [name1, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"panel-body\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              style: {\n                textAlign: 'left'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: text1.questionText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 29\n              }, this), type1 === 'Multiple-Response' ? option1.map((note, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"checkbox\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  ref: textValue1,\n                  type: \"checkbox\",\n                  name: \"option\",\n                  value: index,\n                  onChange: e => clickable(e)\n                }, note.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 35\n                }, this), \" \", option1[index]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 35\n              }, this)) : option1.map((note, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"radio\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  ref: textValue1,\n                  type: \"radio\",\n                  name: \"option\",\n                  value: index,\n                  onChange: e => clickable(e)\n                }, note.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 33\n                }, this), \" \", option1[index]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 33\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"panel-footer\",\n            children: len == strinc ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                class: \" btn btn-danger\",\n                style: {\n                  textAlign: 'right'\n                },\n                onClick: () => finish(),\n                children: \"Finish\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 25\n              }, this)\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/test/\" + id + \"/\" + strinc,\n                class: \"btn btn-success\",\n                style: {\n                  textAlign: 'left'\n                },\n                onClick: () => next(),\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                class: \" btn btn-danger\",\n                style: {\n                  textAlign: 'right'\n                },\n                onClick: () => finish(),\n                children: \"Finish\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Test, \"HSxQ7iUUP1Ko/k2u3d+AGcY6UY8=\", false, function () {\n  return [useParams, useParams, useNavigate];\n});\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/home/am-pc-33/Documents/ReactJS/technicaltest/src/component/Test.js"],"names":["React","useState","useEffect","useParams","axios","useNavigate","Finish","Test","id","qnumber","navigate","name1","option1","type1","myLeads","repo","setRepo","intnumber","parseInt","inc","strinc","toString","textValue1","createRef","text1","getRepo","get","then","response","myRepo","data","tests","len","notes","localStorage","getItem","JSON","parse","i","length","_id","name","questions","options","type","next","abc","correctanswer","clickable","e","target","value","console","log","correctOptionIndex","finish","textAlign","questionText","map","note","index"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport {useParams} from 'react-router-dom'\nimport axios from '../../node_modules/axios'\nimport {useNavigate} from 'react-router-dom'\nimport Finish from './Finish'\n\n\nfunction Test() {\nlet {id}=useParams();\nlet {qnumber}=useParams();\n\nlet navigate=useNavigate()\n\nlet name1;\nlet option1=[];\nlet type1=[]\nlet myLeads=[]\nconst [repo,setRepo]=useState([])\n\nlet intnumber=parseInt(qnumber)\nlet inc=1+intnumber\nlet strinc=inc.toString()\n\n\nlet textValue1=React.createRef();\n\n   let text1=[]\nconst getRepo=()=>{\n  \n    axios.get('http://interviewapi.stgbuild.com/getQuizData' )\n    .then(response => {\n        const myRepo=response.data.tests;\n       setRepo(myRepo);\n        \n    });\n};\n\nlet len\n useEffect(() => {\n  let notes=localStorage.getItem('repo')\nlet myLeads=JSON.parse(notes)\n\n getRepo()    \n    }, [])\n    \n\nfor(let i=0;i<repo.length;i++){\n  if(repo[i]._id == id){\n    name1=repo[i].name\n      text1=repo[i].questions[qnumber]\n      option1=repo[i].questions[qnumber].options\n     type1=repo[i].questions[qnumber].type\n   len=repo[i].questions.length\n//localStorage.setItem('abc',JSON.stringify(option1))\n  }\n}\n// function setItems(){\n// for(let i=0;i<repo.length;i++){\n  \n  \n//   if(repo[i]._id == id){\n//     a1=repo[i].questions[qnumber].correctOptionIndex\n//     // if(a1 == ){\n\n//     // }\n//   }}\n// }\n\n\n  // for(let i=0;i<repo.length;i++){\n  \n      //   a1=repo[i].questions[qnumber].correctOptionIndex\n      // if(a1 == )    \n       \n      // }\n   \n//localStorage.setItem('abc',JSON.stringify(ticked_answer))\n\nfunction next(){\n\n}\n\nlet abc\nlet correctanswer\nlet clickable = (e)=>{\n  let notes=localStorage.getItem('repo')\nlet myLeads=JSON.parse(notes)\n//console.log(myLeads)\n  abc=e.target.value\n  console.log(abc)\n  let \n  correctanswer=repo[0].questions[0].correctOptionIndex\nfor(let i=0;i<myLeads.length;i++){\n  if(repo[i].questions[qnumber].correctOptionIndex == abc){\n\n  }\n}\n  // for(let i=0;i<;i++){\n\n  // }\n  console.log(correctanswer)\n}\n\n\nfunction finish(){\n  navigate('/finish')\n}\n// const [counter, setCounter] = useState(0)\n\n// function increment(){\n\n//   setCounter(counter+1)\n// }\n// console.log(counter)\n    return (\n      <>\n    \n      <div class=\"row\">\n      <h1>My Interview Portal</h1>\n          <hr/>\n          <div class=\"col-md-12\">\n              <div class=\"panel panel-default\">\n                  <div class=\"panel-heading\">{name1} </div>\n                  <div class=\"panel-body\">\n                  <form style={{textAlign:'left'}}> \n                            <label>{text1.questionText}</label>\n                            \n                            {\n                            type1 === 'Multiple-Response' ?\n                                option1.map((note,index)=>(\n                              \n                                  <div class=\"checkbox\" >\n                                 \n                                  <input ref={textValue1} key={note.id} type=\"checkbox\" name=\"option\" value={index} onChange={(e)=>clickable(e)}/> {option1[index]}\n                             \n                          </div>  ))\n\n                              :\n\n                            option1.map((note,index)=>(\n                              \n                                <div class=\"radio\" >\n                               \n                                <input ref={textValue1} key={note.id} type=\"radio\" name=\"option\" value={index} onChange={(e)=>clickable(e)}/> {option1[index]}\n                            \n                        </div>\n                            ))}\n\n                        </form>\n                  </div>\n                  <div class=\"panel-footer\">\n                      {(len) == (strinc)?\n                      <>\n                        <a  class=\" btn btn-danger\"  style={{textAlign:'right'}} onClick={()=>finish()} >Finish</a>  \n                        </>\n                        :\n                        <>\n                        <a  href={\"/test/\"+id+\"/\"+strinc} class=\"btn btn-success\" style={{textAlign:'left'}} onClick={()=>next()} >Next</a>\n                        <a class=\" btn btn-danger\" style={{textAlign:'right'}} onClick={()=>finish()} >Finish</a>\n                        {/* <a class=\" btn btn-danger\" style={{textAlign:'right'}} onClick={()=>increment()} >increment</a> */}\n                        </>\n                    }\n                                         \n\n                  </div>\n              </div>\n          </div>\n      </div>\n \n  </>\n    )\n}\n\nexport default Test\n"]},"metadata":{},"sourceType":"module"}