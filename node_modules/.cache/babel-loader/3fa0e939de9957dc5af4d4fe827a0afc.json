{"ast":null,"code":"var _jsxFileName = \"/home/am-pc-33/Documents/ReactJS/technicaltest/src/component/Test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { useParams } from 'react-router-dom';\nimport axios from '../../node_modules/axios';\nimport { useNavigate } from 'react-router-dom';\nimport Finish from './Finish';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Test() {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  let {\n    qnumber\n  } = useParams();\n  let navigate = useNavigate();\n  let name1;\n  let option1 = [];\n  let type1 = [];\n  const [repo, setRepo] = useState([]);\n  let intnumber = parseInt(qnumber);\n  let inc = 1 + intnumber;\n  let strinc = inc.toString();\n  let text1 = [];\n\n  const getRepo = () => {\n    axios.get('http://interviewapi.stgbuild.com/getQuizData').then(response => {\n      const myRepo = response.data.tests;\n      setRepo(myRepo);\n    });\n  };\n\n  let len;\n  useEffect(() => {\n    getRepo();\n  }, []);\n\n  for (let i = 0; i < repo.length; i++) {\n    if (repo[i]._id == id) {\n      name1 = repo[i].name;\n      text1 = repo[i].questions[qnumber];\n      option1 = repo[i].questions[qnumber].options;\n      type1 = repo[i].questions[qnumber].type;\n      len = repo[i].questions.length;\n    }\n  }\n\n  function finish() {\n    navigate('/finish');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Interview Portal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        class: \"card-title\",\n        children: \"Card title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"card-text\",\n        children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        class: \"btn btn-primary\",\n        children: \"Go somewhere\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card-body\",\n      style: {\n        display: 'block'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        class: \"card-text\",\n        children: name1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"modal-body \",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        style: {\n          textAlign: 'left'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: text1.questionText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this), type1 === 'Multiple-Response' ? option1.map((note, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"option\",\n            value: index\n          }, note.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 35\n          }, this), \" \", option1[index]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 35\n        }, this)) : option1.map((note, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"radio\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"option\",\n            value: index\n          }, note.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this), \" \", option1[index]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 33\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"modal-footer\",\n      children: len == strinc ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        class: \"btn btn-danger\",\n        onClick: () => finish(),\n        children: \"Finish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/test/\" + id + \"/\" + strinc,\n          class: \"btn btn-success\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Test, \"HSxQ7iUUP1Ko/k2u3d+AGcY6UY8=\", false, function () {\n  return [useParams, useParams, useNavigate];\n});\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/home/am-pc-33/Documents/ReactJS/technicaltest/src/component/Test.js"],"names":["React","useState","useEffect","useParams","axios","useNavigate","Finish","Test","id","qnumber","navigate","name1","option1","type1","repo","setRepo","intnumber","parseInt","inc","strinc","toString","text1","getRepo","get","then","response","myRepo","data","tests","len","i","length","_id","name","questions","options","type","finish","display","textAlign","questionText","map","note","index"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport {useParams} from 'react-router-dom'\nimport axios from '../../node_modules/axios'\nimport {useNavigate} from 'react-router-dom'\nimport Finish from './Finish'\nfunction Test() {\nlet {id}=useParams();\nlet {qnumber}=useParams();\nlet navigate=useNavigate()\nlet name1;\nlet option1=[];\nlet type1=[]\nconst [repo,setRepo]=useState([])\n    \nlet intnumber=parseInt(qnumber)\nlet inc=1+intnumber\nlet strinc=inc.toString()\n\n   let text1=[]\nconst getRepo=()=>{\n    axios.get('http://interviewapi.stgbuild.com/getQuizData' )\n    .then(response => {\n        const myRepo=response.data.tests;\n       setRepo(myRepo);\n        \n    });\n};\n\nlet len\n useEffect(() => {\n getRepo()    \n    }, [])\n    \n\nfor(let i=0;i<repo.length;i++){\n  if(repo[i]._id == id){\n    name1=repo[i].name\n      text1=repo[i].questions[qnumber]\n      option1=repo[i].questions[qnumber].options\n     type1=repo[i].questions[qnumber].type\n   len=repo[i].questions.length\n  }\n}\nfunction finish(){\n  navigate('/finish')\n}\n    return (\n        <div>\n            <div>\n             <h1>My Interview Portal</h1>\n             </div>\n            \n             <div class=\"card-body\">\n    <h5 class=\"card-title\">Card title</h5>\n    <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n    <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a>\n  </div>\n\n            <div class=\"card-body\" style={{display:'block'}}>\n\n        <h5 class=\"card-text\">{name1}</h5>\n        \n      </div>\n      <div class=\"modal-body \">\n      <form style={{textAlign:'left'}}> \n                            <label>{text1.questionText}</label>\n                            \n                            {\n                            type1 === 'Multiple-Response' ?\n                                option1.map((note,index)=>(\n                              \n                                  <div class=\"checkbox\" >\n                                 \n                                  <input key={note.id} type=\"checkbox\" name=\"option\" value={index}/> {option1[index]}\n                              \n                          </div>  ))\n\n                              :\n                            option1.map((note,index)=>(\n                              \n                                <div class=\"radio\" >\n                               \n                                <input key={note.id} type=\"radio\" name=\"option\" value={index}/> {option1[index]}\n                            \n                        </div>\n                            ))}\n\n                        </form>\n      </div>\n      \n      <div class=\"modal-footer\">\n        {(len) == (strinc)?\n     \n        <button type=\"button\" class=\"btn btn-danger\" onClick={()=>finish()}>Finish</button>\n        :\n        <>\n        <a href={\"/test/\"+id+\"/\"+strinc} class=\"btn btn-success\">Next</a>\n       \n        </>\n        }\n     \n    \n</div>\n        </div>\n    )\n}\n\nexport default Test\n"]},"metadata":{},"sourceType":"module"}