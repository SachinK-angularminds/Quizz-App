{"ast":null,"code":"var _jsxFileName = \"/home/am-pc-33/Documents/ReactJS/technicaltest/src/component/Index1.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport axios from '../../node_modules/axios';\nimport { useParams } from 'react-router-dom';\nimport Test from './Test';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Index1() {\n  _s();\n\n  const [repo, setRepo] = useState([]);\n  let navigate = useNavigate();\n  let {\n    id\n  } = useParams();\n  let index_value = 0;\n\n  const getRepo = () => {\n    axios.get('http://interviewapi.stgbuild.com/getQuizData').then(response => {\n      console.log(response.data.tests);\n      const myRepo = response.data.tests;\n      setRepo(myRepo);\n    });\n  };\n\n  useEffect(() => {\n    localStorage.setItem('repo', JSON.stringify());\n    getRepo();\n  }, []);\n\n  let items = (notequestions, index) => {\n    let parameters = {\n      answer: [],\n      indvalue: index_value,\n      questions: notequestions\n    };\n    localStorage.setItem('repo', JSON.stringify(parameters));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"My Interview Portal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            class: \"table table-striped\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Test\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"No of Questions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: repo.map((note, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: note.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 26\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: note.questions.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 26\n                }, this), a = index, /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                    class: \"btn btn-warning\",\n                    onClick: () => items(note.questions),\n                    href: 'test/' + note._id + '/' + 0,\n                    children: \"Start Test\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 32\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 27\n                }, this)]\n              }, note._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 26\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Index1, \"GqquvuTkxvB8ZCAbisqD2+jDPY4=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Index1;\nexport default Index1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index1\");","map":{"version":3,"sources":["/home/am-pc-33/Documents/ReactJS/technicaltest/src/component/Index1.js"],"names":["React","useState","useEffect","useNavigate","axios","useParams","Test","Index1","repo","setRepo","navigate","id","index_value","getRepo","get","then","response","console","log","data","tests","myRepo","localStorage","setItem","JSON","stringify","items","notequestions","index","parameters","answer","indvalue","questions","map","note","name","length","a","_id"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport {useNavigate} from 'react-router-dom'\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport axios from '../../node_modules/axios'\nimport {useParams} from 'react-router-dom'\nimport Test from './Test'\n\nfunction Index1() {\n    const [repo,setRepo]=useState([])\n    let navigate=useNavigate()\n    let {id}=useParams();\n    let index_value=0\nconst getRepo=()=>{\n\n    axios.get('http://interviewapi.stgbuild.com/getQuizData' )\n    .then(response => {\n        console.log(response.data.tests )\n        const myRepo=response.data.tests;\n       setRepo(myRepo);\n        \n    });\n};\n\n\n useEffect(() => {\n    localStorage.setItem('repo', JSON.stringify());\n\n getRepo()    \n \n    }, [])\n\n    \n   let items = (notequestions,index) => {\n    let parameters = {\n        answer:[],\n        indvalue:index_value,\n      questions:notequestions,\n      \n      \n    }\n    localStorage.setItem('repo', JSON.stringify(parameters))\n    }\n    return (\n        <div>\n                <div className=\"container\">\n        <div class=\"row\">\n            <h1>My Interview Portal</h1>\n            <hr/>\n            <div class=\"col-md-12\">\n                <table class=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th>Test</th>\n                            <th>No of Questions</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                     {repo.map((note,index)=>(\n                        \n                         <tr key={note._id}>\n                         <td>{note.name}</td>\n                         <td>{note.questions.length}</td>\n                         { a=index}\n                          <td> <a class=\"btn btn-warning\" onClick={()=>items(note.questions)} href={'test/'+note._id+'/'+0}  >Start Test</a></td>\n                     </tr>\n                     ))}\n                  \n\n                      \n                    </tbody>\n                </table>\n            </div>\n            \n        </div>\n\n        \n    </div>\n        </div>\n    )\n}\n\nexport default Index1\n"]},"metadata":{},"sourceType":"module"}