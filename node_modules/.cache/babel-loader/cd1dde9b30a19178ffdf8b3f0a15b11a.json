{"ast":null,"code":"var _jsxFileName = \"/home/am-pc-33/Documents/ReactJS/technicaltest/src/component/Test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from '../../node_modules/axios';\nimport { useNavigate } from 'react-router-dom';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css'; //import Finish from './Finish'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Test() {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  let {\n    qnumber\n  } = useParams();\n  let navigate = useNavigate();\n  let displayprev = [];\n  let type = 'Multiple-Response';\n  let name1;\n  let option1 = []; //let type1=[];\n\n  let intnumber;\n  let inc;\n  let strinc;\n  let prevarray = [];\n  const [repo, setRepo] = useState([]);\n  const [seloption, setSeloption] = useState('null');\n  let [checkoption, setCheckoption] = useState([]);\n  intnumber = parseInt(qnumber);\n  inc = 1 + intnumber;\n  strinc = inc.toString();\n  let idvalue;\n  let textValue1 = /*#__PURE__*/React.createRef();\n  let text1 = [];\n\n  const getRepo = () => {\n    axios.get('http://interviewapi.stgbuild.com/getQuizData').then(response => {\n      const myRepo = response.data.tests;\n      setRepo(myRepo);\n    });\n  };\n\n  let len;\n  useEffect(() => {\n    let notes = localStorage.getItem('repo');\n    let myLeads = JSON.parse(notes);\n    getRepo();\n  }, []);\n  let notes = localStorage.getItem('repo');\n  let myLeads = JSON.parse(notes);\n  let index;\n\n  for (let i = 0; i < repo.length; i++) {\n    if (repo[i]._id == id) {\n      index = i;\n      name1 = repo[i].name;\n      text1 = repo[i].questions[qnumber];\n      option1 = repo[i].questions[qnumber].options; // type=repo[i].questions[qnumber].type\n\n      if (repo[i].questions[qnumber].type == type) {\n        type = \"Multiple-Response\";\n      } else {\n        type = \"Radio\";\n      } //console.log(type)\n\n\n      len = repo[i].questions.length;\n      idvalue = repo[i].questions[qnumber]._id; //localStorage.setItem('abc',JSON.stringify(option1))\n    }\n  } //console.log(repo)\n\n\n  let index1;\n  let temp1 = [];\n  let indexofquestion = myLeads.questions[qnumber];\n  let indexvalueofquestion = myLeads.questions.indexOf(indexofquestion);\n\n  function previous(e) {\n    intnumber = parseInt(qnumber);\n    inc = intnumber - 1;\n    strinc = inc.toString();\n    index1 = myLeads.answer.indexOf(e.target.value); //myLeads.prevState.splice(index1,0)\n\n    myLeads.answer.splice(index1, 1);\n    localStorage.setItem('repo', JSON.stringify(myLeads));\n    navigate(\"/test/\" + id + \"/\" + strinc);\n  }\n\n  function next() {\n    intnumber = parseInt(qnumber);\n    inc = 1 + intnumber;\n    strinc = inc.toString();\n    let updateradiooption; //console.log(displayprev)\n    //localStorage('abc',JSON.stringify(radiovalue))\n\n    let temp_value;\n    /* for(let indexvalueofquestion=0;indexvalueofquestion<strinc;indexvalueofquestion++){\n           if(indexvalueofquestion == (strinc-1)){\n             if(type == 'Multiple-Response'){\n               myLeads.prevState[indexvalueofquestion]=checkoption\n               myLeads.prevState.push(myLeads.prevState[indexvalueofquestion])\n               console.log(myLeads.prevState)\n             }else{\n               myLeads.prevState[indexvalueofquestion]=seloption\n               temp1=myLeads.prevState[indexvalueofquestion]\n               console.log(myLeads.prevState)\n              }\n             \n           }\n     }   */\n    // if(seloption == ''){\n    //   updateradiooption=seloption\n    // }\n    // }else{\n    // }\n\n    if (type == 'Multiple-Response') {\n      let tempvar = parseInt(strinc);\n\n      for (let i = 0; i <= tempvar; i++) {\n        // console.log(indexvalueofquestion)\n        if (indexvalueofquestion == tempvar - i) {\n          myLeads.prevState[indexvalueofquestion] = checkoption;\n          temp1 = myLeads.prevState[indexvalueofquestion];\n        }\n      } // for(let indexvalueofquestion=0;indexvalueofquestion<strinc;indexvalueofquestion++){\n      //   if(indexvalueofquestion == (strinc-1)){\n      //     myLeads.prevState[indexvalueofquestion]=checkoption\n      //     console.log(myLeads.prevState[indexvalueofquestion])\n      //   }\n      // }\n\n    } else if (type == 'Radio') {\n      let tempvar = parseInt(strinc);\n\n      for (let i = 0; i <= tempvar; i++) {\n        if (indexvalueofquestion == tempvar - i) {\n          myLeads.prevState[indexvalueofquestion] = seloption;\n          temp1 = myLeads.prevState[indexvalueofquestion];\n        }\n      }\n    } //console.log(myLeads.prevState)\n\n\n    localStorage.setItem('repo', JSON.stringify(myLeads.prevState));\n\n    if (type == 'Multiple-Response') {\n      //console.log(checkoption)\n      let correctoptionlength = repo[index].questions[qnumber].correctOptionIndex.length; //console.log(correctoptionlength)\n\n      for (let i = 0; i < correctoptionlength; i++) {\n        if (repo[index].questions[qnumber].correctOptionIndex[i] == checkoption[i]) {\n          temp_value = 'correct';\n        } else {\n          temp_value = 'wrong';\n        }\n      }\n\n      myLeads.answer.push(temp_value);\n    } else {\n      if (repo[index].questions[qnumber].correctOptionIndex != seloption) {\n        // myLeads[id].answer.push('wrong'\n        //repo.push('wrong')\n        myLeads.answer.push('wrong');\n      } else {\n        // repo.push('correct')\n        // myLeads[id].answer.push('correct')\n        myLeads.answer.push('correct');\n      }\n    }\n\n    localStorage.setItem('repo', JSON.stringify(myLeads));\n    navigate(\"/test/\" + id + \"/\" + strinc);\n  }\n\n  let temp = [];\n\n  function clickableRadio(e) {\n    setSeloption(e.target.value);\n  }\n\n  let tempcheck = [];\n\n  function clickableCheckbox(e) {\n    setCheckoption(e.target.value); // let eventvalue=e.target.checked;\n    // console.log(eventvalue)\n    // if((eventvalue) == true){\n    //   tempcheck.push(e.target.value)\n    // }\n    // console.log(tempcheck)\n\n    tempcheck = checkoption;\n    let checkindex;\n    let eventv = e.target.value;\n\n    if (tempcheck.includes(eventv) == true) {\n      checkindex = tempcheck.indexOf(e.target.value);\n      tempcheck.splice(checkindex, 1);\n    } else {\n      tempcheck.push(eventv);\n      tempcheck.sort();\n    } //console.log(tempcheck)\n\n\n    setCheckoption(tempcheck);\n  }\n\n  function finish() {\n    if (repo[index].questions[qnumber].correctOptionIndex == seloption) {\n      myLeads.answer.push('correct');\n    } else {\n      myLeads.answer.push('wrong');\n    }\n\n    localStorage.setItem('repo', JSON.stringify(myLeads));\n    navigate('/finish');\n  }\n\n  prevarray = myLeads.prevState;\n  {\n    displayprev = myLeads.questions.indexOf(myLeads.questions[qnumber]);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Interview Portal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"panel panel-default\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"panel-heading\",\n            children: [name1, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"panel-body\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              style: {\n                textAlign: 'left'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: text1.questionText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 29\n              }, this), type === 'Multiple-Response' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: option1.map((note, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"checkbox\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    onChange: clickableCheckbox,\n                    ref: textValue1,\n                    type: \"checkbox\",\n                    name: \"option\",\n                    value: index\n                  }, note.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 34\n                  }, this), \" \", option1[index]]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 29\n                }, this))\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: option1.map((note, index) => typeof prevarray[displayprev] == 'undefined' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"radio\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      onChange: clickableRadio,\n                      ref: textValue1,\n                      type: \"radio\",\n                      name: \"option\",\n                      value: index,\n                      style: {\n                        backgroundColor: 'blue'\n                      }\n                    }, note.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 296,\n                      columnNumber: 35\n                    }, this), \" \", option1[index]]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false) : parseInt(prevarray[displayprev]) === index ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"radio\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      onChange: clickableRadio,\n                      defaultChecked: true,\n                      ref: textValue1,\n                      type: \"radio\",\n                      name: \"option\",\n                      value: index\n                    }, note.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 39\n                    }, this), \" \", option1[index]]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 39\n                  }, this)\n                }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"radio\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      onChange: clickableRadio,\n                      ref: textValue1,\n                      type: \"radio\",\n                      name: \"option\",\n                      value: index\n                    }, note.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 315,\n                      columnNumber: 39\n                    }, this), \" \", option1[index]]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 39\n                  }, this)\n                }, void 0, false))\n              }, void 0, false)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"panel-footer\",\n            children: len == strinc ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                class: \"btn btn-success\",\n                style: {\n                  textAlign: 'left'\n                },\n                onClick: previous,\n                children: \"Previous\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 24\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                style: {\n                  textAlign: 'right'\n                },\n                class: \" btn btn-danger\",\n                onClick: () => finish(),\n                children: \"Finish\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true) : strinc > 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                class: \"btn btn-success\",\n                style: {\n                  textAlign: 'left'\n                },\n                onClick: previous,\n                children: \"Previous\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                class: \"btn btn-success\",\n                style: {\n                  textAlign: 'left'\n                },\n                onClick: next,\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 24\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                class: \"btn btn-success\",\n                style: {\n                  textAlign: 'left'\n                },\n                onClick: next,\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 25\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Test, \"P/OZbqa1TrBbLMiYpZV7E8ABmqY=\", false, function () {\n  return [useParams, useParams, useNavigate];\n});\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/home/am-pc-33/Documents/ReactJS/technicaltest/src/component/Test.js"],"names":["React","useState","useEffect","useParams","axios","useNavigate","Test","id","qnumber","navigate","displayprev","type","name1","option1","intnumber","inc","strinc","prevarray","repo","setRepo","seloption","setSeloption","checkoption","setCheckoption","parseInt","toString","idvalue","textValue1","createRef","text1","getRepo","get","then","response","myRepo","data","tests","len","notes","localStorage","getItem","myLeads","JSON","parse","index","i","length","_id","name","questions","options","index1","temp1","indexofquestion","indexvalueofquestion","indexOf","previous","e","answer","target","value","splice","setItem","stringify","next","updateradiooption","temp_value","tempvar","prevState","correctoptionlength","correctOptionIndex","push","temp","clickableRadio","tempcheck","clickableCheckbox","checkindex","eventv","includes","sort","finish","textAlign","questionText","map","note","backgroundColor"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport {useParams} from 'react-router-dom'\nimport axios from '../../node_modules/axios'\nimport {useNavigate} from 'react-router-dom'\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css'\n//import Finish from './Finish'\n\n\nfunction Test() {\nlet {id}=useParams();\nlet {qnumber}=useParams();\nlet navigate=useNavigate()\nlet displayprev=[]\nlet type='Multiple-Response'\nlet name1;\nlet option1=[];\n//let type1=[];\nlet intnumber;\nlet inc;\nlet strinc;\nlet prevarray=[]\nconst [repo,setRepo]=useState([])\nconst [seloption,setSeloption]=useState('null')\nlet [checkoption,setCheckoption]=useState([])\n\n\n intnumber=parseInt(qnumber)\n inc=1+intnumber\n strinc=inc.toString()\n\nlet idvalue\n\n\nlet textValue1=React.createRef();\n\n   let text1=[]\nconst getRepo=()=>{\n  \n    axios.get('http://interviewapi.stgbuild.com/getQuizData' )\n    .then(response => {\n        const myRepo=response.data.tests;\n       setRepo(myRepo);\n        \n    });\n};\n\n\nlet len\n useEffect(() => {\n  let notes=localStorage.getItem('repo')\nlet myLeads=JSON.parse(notes)\n\n getRepo()    \n    }, [])\n    let notes=localStorage.getItem('repo')\n    let myLeads=JSON.parse(notes)\n    let index\n\nfor(let i=0;i<repo.length;i++){\n  if(repo[i]._id == id){\n    index=i\n        name1=repo[i].name\n      text1=repo[i].questions[qnumber]\n      option1=repo[i].questions[qnumber].options\n    // type=repo[i].questions[qnumber].type\n     \n        if(repo[i].questions[qnumber].type == type){\n          type=\"Multiple-Response\"\n        }else{\n          type=\"Radio\"\n        }\n        //console.log(type)\n   len=repo[i].questions.length\n   idvalue=repo[i].questions[qnumber]._id\n//localStorage.setItem('abc',JSON.stringify(option1))\n  }\n}\n//console.log(repo)\nlet index1;\n\n\nlet temp1=[]\nlet indexofquestion=(myLeads.questions[qnumber])\n let indexvalueofquestion=myLeads.questions.indexOf(indexofquestion)\n\nfunction previous(e){\n  intnumber=parseInt(qnumber)\n  inc=intnumber-1\n  strinc=inc.toString()\nindex1=myLeads.answer.indexOf(e.target.value)\n  //myLeads.prevState.splice(index1,0)\nmyLeads.answer.splice(index1,1)\n\n  localStorage.setItem('repo',JSON.stringify(myLeads))\n    navigate(\"/test/\"+id+\"/\"+strinc)\n}\n\n\nfunction next(){\n  intnumber=parseInt(qnumber)\n  inc=1+intnumber\n  strinc=inc.toString()\nlet updateradiooption\n  \n  //console.log(displayprev)\n  //localStorage('abc',JSON.stringify(radiovalue))\nlet temp_value\n\n\n\n   /* for(let indexvalueofquestion=0;indexvalueofquestion<strinc;indexvalueofquestion++){\n          if(indexvalueofquestion == (strinc-1)){\n            if(type == 'Multiple-Response'){\n              myLeads.prevState[indexvalueofquestion]=checkoption\n              myLeads.prevState.push(myLeads.prevState[indexvalueofquestion])\n              console.log(myLeads.prevState)\n            }else{\n              myLeads.prevState[indexvalueofquestion]=seloption\n              temp1=myLeads.prevState[indexvalueofquestion]\n              console.log(myLeads.prevState)\n\n            }\n            \n          }\n    }   */\n\n    // if(seloption == ''){\n     \n    //   updateradiooption=seloption\n     \n\n    // }\n    // }else{\n      \n    // }\n\n         if(type == 'Multiple-Response'){\n          \n            let tempvar=parseInt(strinc)\n            \n\n           for(let i=0;i<=tempvar;i++){\n           // console.log(indexvalueofquestion)\n            if(indexvalueofquestion == (tempvar-i)){\n              myLeads.prevState[indexvalueofquestion]=checkoption\n              temp1=myLeads.prevState[indexvalueofquestion]\n                }\n          }\n\n          // for(let indexvalueofquestion=0;indexvalueofquestion<strinc;indexvalueofquestion++){\n          //   if(indexvalueofquestion == (strinc-1)){\n             \n          //     myLeads.prevState[indexvalueofquestion]=checkoption\n          //     console.log(myLeads.prevState[indexvalueofquestion])\n\n          //   }\n          // }\n\n         }else if(type == 'Radio'){\n            let tempvar=parseInt(strinc)\n\n          for(let i=0;i<=tempvar;i++){\n            \n            if(indexvalueofquestion == (tempvar-i)){\n              myLeads.prevState[indexvalueofquestion]=seloption\n              temp1=myLeads.prevState[indexvalueofquestion]\n            }\n          } \n        }\n\n   //console.log(myLeads.prevState)\n   localStorage.setItem('repo',JSON.stringify(myLeads.prevState))\n\n\n  if(type =='Multiple-Response'){\n    //console.log(checkoption)\n    let correctoptionlength=repo[index].questions[qnumber].correctOptionIndex.length\n    //console.log(correctoptionlength)\n\n    for(let i=0;i<correctoptionlength;i++){\n    if(repo[index].questions[qnumber].correctOptionIndex[i] == checkoption[i]){\n      temp_value='correct'\n    }else{\n     temp_value='wrong'\n    }\n  }\n  myLeads.answer.push(temp_value)\n  }\n  else{\n   \n  if(repo[index].questions[qnumber].correctOptionIndex != seloption){\n        // myLeads[id].answer.push('wrong'\n          //repo.push('wrong')\n          myLeads.answer.push('wrong')\n        \n      }else{\n       // repo.push('correct')\n// myLeads[id].answer.push('correct')\nmyLeads.answer.push('correct')\n\n      }\n\n}\nlocalStorage.setItem('repo',JSON.stringify(myLeads))\nnavigate(\"/test/\"+id+\"/\"+strinc)\n}\n\n\nlet temp=[]\nfunction clickableRadio(e){\n setSeloption(e.target.value)\n}\n\n\nlet tempcheck=[]\nfunction clickableCheckbox(e){\n  \n  setCheckoption(e.target.value)\n// let eventvalue=e.target.checked;\n// console.log(eventvalue)\n// if((eventvalue) == true){\n  \n//   tempcheck.push(e.target.value)\n\n// }\n// console.log(tempcheck)\ntempcheck=checkoption\nlet checkindex\nlet eventv=e.target.value\nif(tempcheck.includes(eventv) == true){\n  checkindex=tempcheck.indexOf(e.target.value)\n  tempcheck.splice(checkindex,1)\n}else{\n  tempcheck.push(eventv)\n  tempcheck.sort()\n}\n//console.log(tempcheck)\nsetCheckoption(tempcheck)\n }\n\n  \n\nfunction finish(){\n  if((repo[index].questions[qnumber].correctOptionIndex) == seloption){\n  \n     myLeads.answer.push('correct')\n  }else{\n  \nmyLeads.answer.push('wrong')\n  }\n  localStorage.setItem('repo',JSON.stringify(myLeads))\n\n\n  navigate('/finish')\n}\nprevarray=myLeads.prevState\n{displayprev=myLeads.questions.indexOf(myLeads.questions[qnumber])}\n\n    return (\n      <>\n    \n      <div class=\"row\">\n      <h1>My Interview Portal</h1>\n          <hr/>\n          <div class=\"col-md-12\">\n              <div class=\"panel panel-default\">\n                  <div class=\"panel-heading\">{name1} </div>\n                  <div class=\"panel-body\">\n                  <form style={{textAlign:'left'}}> \n                            <label>{text1.questionText}</label>\n                          \n\n                            {\n                              \n                            type === 'Multiple-Response' ?\n                            <>\n                               {option1.map((note,index)=>(\n                                \n                               \n                            <div class=\"checkbox\">\n                                 <input  onChange={clickableCheckbox} ref={textValue1}  key={note.id} type=\"checkbox\" name=\"option\" value={index} /> {option1[index]}\n                           </div>\n                                ))\n                               }</>\n                              :\n                              <>\n                       \n                              {/* { {displayprev=repo[index].questions[indexvalueofquestion]} } */}\n                              \n                            {option1.map((note,index)=>(\n                              \n                              typeof prevarray[displayprev] == 'undefined' ?(\n                                <>\n                              <div class=\"radio\">\n                                {/* {console.log('abcd')} */}\n                                  <input onChange={clickableRadio}  ref={textValue1} key={note.id} type=\"radio\" name=\"option\" value={index} style={{backgroundColor:'blue'}}/> {option1[index]}\n                              </div>\n                                </>\n                              )\n                            :\n                            \n                              parseInt(prevarray[displayprev]) === index ?(\n                                      <>\n                                      <div class=\"radio\">\n                                      {/* {prevarray[index]+\"radioc\"} */}\n                                      <input onChange={clickableRadio} defaultChecked={true} ref={textValue1} key={note.id} type=\"radio\" name=\"option\" value={index} /> {option1[index]}\n                                      </div> \n                                      </>)\n                                    :\n                              (\n                                      <>\n                                      <div class=\"radio\">\n                                      {/* {prevarray[index]+\"radiouc\"} */}\n\n                                      <input onChange={clickableRadio} ref={textValue1} key={note.id} type=\"radio\" name=\"option\" value={index} /> {option1[index]}\n                                      </div> \n                                      </>)\n                            ))\n                       }\n                            </>\n                            }\n       \n                        </form>\n                  </div>\n                  <div class=\"panel-footer\">\n                      {(len) == (strinc)?\n                      <>\n                       <a   class=\"btn btn-success\" style={{textAlign:'left'}} onClick={previous} >Previous</a>\n                        <a style={{textAlign:'right'}} class=\" btn btn-danger\"   onClick={()=>finish()} >Finish</a>  \n                        </>\n                        : strinc >1 ?\n                        <>\n                          <a   class=\"btn btn-success\" style={{textAlign:'left'}} onClick={previous} >Previous</a>\n                       <a   class=\"btn btn-success\" style={{textAlign:'left'}} onClick={next} >Next</a>\n                       \n                    \n                        </>\n                        :\n                        <>\n                       \n                        <a   class=\"btn btn-success\" style={{textAlign:'left'}} onClick={next} >Next</a>\n                        </>\n                    }\n                                         \n\n                  </div>\n              </div>\n          </div>\n      </div>\n \n  </>\n    )\n}\n\nexport default Test\n"]},"metadata":{},"sourceType":"module"}