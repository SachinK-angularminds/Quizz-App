{"ast":null,"code":"var _jsxFileName = \"/home/am-pc-33/Documents/ReactJS/technicaltest/src/component/Test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from '../../node_modules/axios';\nimport { useNavigate } from 'react-router-dom';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css'; //import Finish from './Finish'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Test() {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  let {\n    qnumber\n  } = useParams();\n  let navigate = useNavigate();\n  let type = 'Multiple-Response';\n  let name1;\n  let option1 = [];\n  let type1 = [];\n  let intnumber;\n  let inc;\n  let strinc;\n  const [repo, setRepo] = useState([]);\n  const [seloption, setSeloption] = useState('null');\n  let [checkoption, setCheckoption] = useState([]);\n  intnumber = parseInt(qnumber);\n  inc = 1 + intnumber;\n  strinc = inc.toString();\n  let idvalue;\n  let textValue1 = /*#__PURE__*/React.createRef();\n  let text1 = [];\n\n  const getRepo = () => {\n    axios.get('http://interviewapi.stgbuild.com/getQuizData').then(response => {\n      const myRepo = response.data.tests;\n      setRepo(myRepo);\n    });\n  };\n\n  let len;\n  useEffect(() => {\n    let notes = localStorage.getItem('repo');\n    let myLeads = JSON.parse(notes);\n    console.log(myLeads);\n    getRepo();\n  }, []);\n  let notes = localStorage.getItem('repo');\n  let myLeads = JSON.parse(notes);\n  let index;\n\n  for (let i = 0; i < repo.length; i++) {\n    if (repo[i]._id == id) {\n      index = i;\n      name1 = repo[i].name;\n      text1 = repo[i].questions[qnumber];\n      option1 = repo[i].questions[qnumber].options;\n\n      if (repo[i].questions[qnumber].type == type) {\n        type1 = 'Multiple-Response';\n        l;\n      } else {\n        type1 = 'Radio';\n      }\n\n      len = repo[i].questions.length;\n      idvalue = repo[i]._id; //localStorage.setItem('abc',JSON.stringify(option1))\n    }\n  }\n\n  let a;\n  let index1;\n  let prevstate = [];\n\n  function previous(e) {\n    intnumber = parseInt(qnumber);\n    inc = intnumber - 1;\n    strinc = inc.toString();\n    index1 = myLeads.answer.indexOf(e.target.value);\n    myLeads.answer.splice(index1, 1);\n    localStorage.setItem('repo', JSON.stringify(myLeads));\n    navigate(\"/test/\" + id + \"/\" + strinc);\n  }\n\n  let temp1;\n\n  function next() {\n    intnumber = parseInt(qnumber);\n    inc = 1 + intnumber;\n    strinc = inc.toString();\n    let radiovalue = seloption; //localStorage('abc',JSON.stringify(radiovalue))\n\n    let checkvalue = checkoption;\n    let temp_value;\n    let indexofquestion = myLeads.questions[qnumber];\n    let indexvalueofquestion = myLeads.questions.indexOf(indexofquestion);\n    let correctoptionlength1 = repo[index].questions[qnumber].correctOptionIndex.length;\n\n    for (let i = 0; i < correctoptionlength1; i++) {\n      //if((indexvalueofquestion+1) == strinc){\n      if (type1 == 'Multiple-Response') {\n        temp1 = checkvalue;\n        console.log(temp1);\n      } else {\n        temp1 = radiovalue;\n      } // }else{\n      //   console.log('error')\n      // }\n\n    }\n\n    myLeads.prevState.push(temp1);\n    localStorage.setItem('repo', JSON.stringify(myLeads));\n\n    if (type1 == 'Multiple-Response') {\n      //console.log(checkoption)\n      let correctoptionlength = repo[index].questions[qnumber].correctOptionIndex.length; //console.log(correctoptionlength)\n\n      for (let i = 0; i < correctoptionlength; i++) {\n        if (repo[index].questions[qnumber].correctOptionIndex[i] == checkoption[i]) {\n          temp_value = 'correct';\n        } else {\n          temp_value = 'wrong';\n        }\n      }\n\n      myLeads.answer.push(temp_value);\n    } else {\n      if (repo[index].questions[qnumber].correctOptionIndex != seloption) {\n        // myLeads[id].answer.push('wrong'\n        //repo.push('wrong')\n        myLeads.answer.push('wrong');\n      } else {\n        // repo.push('correct')\n        // myLeads[id].answer.push('correct')\n        myLeads.answer.push('correct');\n      }\n    }\n\n    localStorage.setItem('repo', JSON.stringify(myLeads));\n    navigate(\"/test/\" + id + \"/\" + strinc);\n  }\n\n  let temp = [];\n\n  function clickableRadio(e) {\n    setSeloption(e.target.value);\n  }\n\n  let tempcheck = [];\n\n  function clickableCheckbox(e) {\n    setCheckoption(e.target.value); // let eventvalue=e.target.checked;\n    // console.log(eventvalue)\n    // if((eventvalue) == true){\n    //   tempcheck.push(e.target.value)\n    // }\n    // console.log(tempcheck)\n\n    tempcheck = checkoption;\n    console.log(tempcheck);\n    let checkindex;\n    let eventv = e.target.value;\n\n    if (tempcheck.includes(eventv) == true) {\n      checkindex = tempcheck.indexOf(e.target.value);\n      tempcheck.splice(checkindex, 1);\n    } else {\n      tempcheck.push(eventv);\n      tempcheck.sort();\n    }\n\n    console.log(tempcheck);\n    setCheckoption(tempcheck);\n  }\n\n  function finish() {\n    if (repo[index].questions[qnumber].correctOptionIndex == seloption) {\n      // myLeads[id].answer.push('correct'\n      //repo.push('correct')\n      myLeads.answer.push('correct');\n    } else {\n      // repo.push('wrong')\n      // myLeads[id].answer.push('wrong')\n      myLeads.answer.push('wrong');\n    }\n\n    localStorage.setItem('repo', JSON.stringify(myLeads));\n    navigate('/finish');\n  } // const [counter, setCounter] = useState(0)\n  // function increment(){\n  //   setCounter(counter+1)\n  // }\n  // console.log(counter)\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Interview Portal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"panel panel-default\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"panel-heading\",\n            children: [name1, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"panel-body\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              style: {\n                textAlign: 'left'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: text1.questionText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 29\n              }, this), type1 === 'Multiple-Response' ? option1.map((note, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"checkbox\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: clickableCheckbox,\n                  ref: textValue1,\n                  type: \"checkbox\",\n                  name: \"option\",\n                  value: index\n                }, note.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 35\n                }, this), \" \", option1[index]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 35\n              }, this)) : option1.map((note, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"radio\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: clickableRadio,\n                  ref: textValue1,\n                  type: \"radio\",\n                  name: \"option\",\n                  value: index\n                }, note.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 33\n                }, this), \" \", option1[index]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 33\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"panel-footer\",\n            children: len == strinc ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                class: \"btn btn-success\",\n                style: {\n                  textAlign: 'left'\n                },\n                onClick: previous,\n                children: \"Previous\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 24\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                style: {\n                  textAlign: 'right'\n                },\n                class: \" btn btn-danger\",\n                onClick: () => finish(),\n                children: \"Finish\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true) : strinc > 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                class: \"btn btn-success\",\n                style: {\n                  textAlign: 'left'\n                },\n                onClick: previous,\n                children: \"Previous\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                class: \"btn btn-success\",\n                style: {\n                  textAlign: 'left'\n                },\n                onClick: next,\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 24\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                class: \"btn btn-success\",\n                style: {\n                  textAlign: 'left'\n                },\n                onClick: next,\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 25\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Test, \"P/OZbqa1TrBbLMiYpZV7E8ABmqY=\", false, function () {\n  return [useParams, useParams, useNavigate];\n});\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/home/am-pc-33/Documents/ReactJS/technicaltest/src/component/Test.js"],"names":["React","useState","useEffect","useParams","axios","useNavigate","Test","id","qnumber","navigate","type","name1","option1","type1","intnumber","inc","strinc","repo","setRepo","seloption","setSeloption","checkoption","setCheckoption","parseInt","toString","idvalue","textValue1","createRef","text1","getRepo","get","then","response","myRepo","data","tests","len","notes","localStorage","getItem","myLeads","JSON","parse","console","log","index","i","length","_id","name","questions","options","l","a","index1","prevstate","previous","e","answer","indexOf","target","value","splice","setItem","stringify","temp1","next","radiovalue","checkvalue","temp_value","indexofquestion","indexvalueofquestion","correctoptionlength1","correctOptionIndex","prevState","push","correctoptionlength","temp","clickableRadio","tempcheck","clickableCheckbox","checkindex","eventv","includes","sort","finish","textAlign","questionText","map","note"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport {useParams} from 'react-router-dom'\nimport axios from '../../node_modules/axios'\nimport {useNavigate} from 'react-router-dom'\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css'\n//import Finish from './Finish'\n\n\nfunction Test() {\nlet {id}=useParams();\nlet {qnumber}=useParams();\nlet navigate=useNavigate()\nlet type='Multiple-Response'\nlet name1;\nlet option1=[];\nlet type1=[];\nlet intnumber;\nlet inc;\nlet strinc;\n\nconst [repo,setRepo]=useState([])\nconst [seloption,setSeloption]=useState('null')\nlet [checkoption,setCheckoption]=useState([])\n\n\n intnumber=parseInt(qnumber)\n inc=1+intnumber\n strinc=inc.toString()\n\nlet idvalue\n\n\nlet textValue1=React.createRef();\n\n   let text1=[]\nconst getRepo=()=>{\n  \n    axios.get('http://interviewapi.stgbuild.com/getQuizData' )\n    .then(response => {\n        const myRepo=response.data.tests;\n       setRepo(myRepo);\n        \n    });\n};\n\n\nlet len\n useEffect(() => {\n  let notes=localStorage.getItem('repo')\nlet myLeads=JSON.parse(notes)\nconsole.log(myLeads)\n\n getRepo()    \n    }, [])\n    let notes=localStorage.getItem('repo')\n    let myLeads=JSON.parse(notes)\n    let index\n\nfor(let i=0;i<repo.length;i++){\n  if(repo[i]._id == id){\n    index=i\n        name1=repo[i].name\n      text1=repo[i].questions[qnumber]\n      option1=repo[i].questions[qnumber].options\n     if(repo[i].questions[qnumber].type == type){\n       type1='Multiple-Response'\n       l\n     }else{\n       type1='Radio'\n     }\n   len=repo[i].questions.length\n  idvalue= repo[i]._id\n//localStorage.setItem('abc',JSON.stringify(option1))\n  }\n}\nlet a;\nlet index1;\nlet prevstate=[]\n\n\nfunction previous(e){\n  intnumber=parseInt(qnumber)\n  inc=intnumber-1\n  strinc=inc.toString()\n\n\n  index1=myLeads.answer.indexOf(e.target.value)\n  myLeads.answer.splice(index1,1)\n\n  localStorage.setItem('repo',JSON.stringify(myLeads))\n    navigate(\"/test/\"+id+\"/\"+strinc)\n}\n\nlet temp1\n\nfunction next(){\n  intnumber=parseInt(qnumber)\n  inc=1+intnumber\n  strinc=inc.toString()\n  let radiovalue=seloption\n\n  //localStorage('abc',JSON.stringify(radiovalue))\n  let checkvalue=checkoption\nlet temp_value\n\nlet indexofquestion=(myLeads.questions[qnumber])\n  let indexvalueofquestion=myLeads.questions.indexOf(indexofquestion)\n  let correctoptionlength1=repo[index].questions[qnumber].correctOptionIndex.length\n\nfor(let i=0;i<correctoptionlength1;i++){\n  //if((indexvalueofquestion+1) == strinc){\n    if(type1 == 'Multiple-Response'){\n        temp1=checkvalue\n        console.log(temp1)\n    }else {\n        temp1=radiovalue\n    }\n\n  // }else{\n  //   console.log('error')\n  // }\n\n    }\n    myLeads.prevState.push(temp1)\n\nlocalStorage.setItem('repo',JSON.stringify(myLeads))\n\n  if(type1 =='Multiple-Response'){\n    //console.log(checkoption)\n    let correctoptionlength=repo[index].questions[qnumber].correctOptionIndex.length\n    //console.log(correctoptionlength)\n\n    for(let i=0;i<correctoptionlength;i++){\n    if(repo[index].questions[qnumber].correctOptionIndex[i] == checkoption[i]){\n      temp_value='correct'\n    }else{\n     temp_value='wrong'\n    }\n  }\n  myLeads.answer.push(temp_value)\n  }\n  else{\n   \n  if(repo[index].questions[qnumber].correctOptionIndex != seloption){\n        // myLeads[id].answer.push('wrong'\n          //repo.push('wrong')\n          myLeads.answer.push('wrong')\n        \n      }else{\n       // repo.push('correct')\n// myLeads[id].answer.push('correct')\nmyLeads.answer.push('correct')\n\n      }\n\n}\nlocalStorage.setItem('repo',JSON.stringify(myLeads))\nnavigate(\"/test/\"+id+\"/\"+strinc)\n}\n\n\nlet temp=[]\nfunction clickableRadio(e){\n setSeloption(e.target.value)\n\n}\n\nlet tempcheck=[]\nfunction clickableCheckbox(e){\n\n  setCheckoption(e.target.value)\n// let eventvalue=e.target.checked;\n// console.log(eventvalue)\n// if((eventvalue) == true){\n  \n//   tempcheck.push(e.target.value)\n\n// }\n// console.log(tempcheck)\ntempcheck=checkoption\nconsole.log(tempcheck)\nlet checkindex\nlet eventv=e.target.value\nif(tempcheck.includes(eventv) == true){\n  checkindex=tempcheck.indexOf(e.target.value)\n  tempcheck.splice(checkindex,1)\n}else{\n  tempcheck.push(eventv)\n  tempcheck.sort()\n}\nconsole.log(tempcheck)\nsetCheckoption(tempcheck)\n }\n\n  \n\nfunction finish(){\n  if((repo[index].questions[qnumber].correctOptionIndex) == seloption){\n    // myLeads[id].answer.push('correct'\n      //repo.push('correct')\n     myLeads.answer.push('correct')\n  }else{\n   // repo.push('wrong')\n// myLeads[id].answer.push('wrong')\nmyLeads.answer.push('wrong')\n  }\n  localStorage.setItem('repo',JSON.stringify(myLeads))\n\n\n  navigate('/finish')\n}\n// const [counter, setCounter] = useState(0)\n\n// function increment(){\n\n//   setCounter(counter+1)\n// }\n// console.log(counter)\n    return (\n      <>\n    \n      <div class=\"row\">\n      <h1>My Interview Portal</h1>\n          <hr/>\n          <div class=\"col-md-12\">\n              <div class=\"panel panel-default\">\n                  <div class=\"panel-heading\">{name1} </div>\n                  <div class=\"panel-body\">\n                  <form style={{textAlign:'left'}}> \n                            <label>{text1.questionText}</label>\n                            \n                            {\n                            type1 === 'Multiple-Response' ?\n                                option1.map((note,index)=>(\n                              \n                                  <div class=\"checkbox\" >\n                                 \n                                  <input onChange={clickableCheckbox} ref={textValue1}  key={note.id} type=\"checkbox\" name=\"option\" value={index} /> {option1[index]}\n                             \n                          </div>  ))\n\n                              :\n\n                            option1.map((note,index)=>(\n                              \n                                <div class=\"radio\" >\n                               \n                                <input onChange={clickableRadio} ref={textValue1} key={note.id} type=\"radio\" name=\"option\" value={index} /> {option1[index]}\n                            \n                        </div>\n                            ))}\n\n                        </form>\n                  </div>\n                  <div class=\"panel-footer\">\n                      {(len) == (strinc)?\n                      <>\n                       <a   class=\"btn btn-success\" style={{textAlign:'left'}} onClick={previous} >Previous</a>\n                        <a style={{textAlign:'right'}} class=\" btn btn-danger\"   onClick={()=>finish()} >Finish</a>  \n                        </>\n                        : strinc >1 ?\n                        <>\n                          <a   class=\"btn btn-success\" style={{textAlign:'left'}} onClick={previous} >Previous</a>\n                       <a   class=\"btn btn-success\" style={{textAlign:'left'}} onClick={next} >Next</a>\n                       \n                        {/* <a class=\" btn btn-danger\" style={{textAlign:'right'}} onClick={()=>increment()} >increment</a> */}\n                        </>\n                        :\n                        <>\n                       \n                        <a   class=\"btn btn-success\" style={{textAlign:'left'}} onClick={next} >Next</a>\n                        </>\n                    }\n                                         \n\n                  </div>\n              </div>\n          </div>\n      </div>\n \n  </>\n    )\n}\n\nexport default Test\n"]},"metadata":{},"sourceType":"module"}